//
//  MainListPresenter.swift
//  GPS Tracker
//
//  Created by Guntis on 2022.
//  Copyright (c) 2022 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData
import CoreLocation

protocol MainListPresentationLogic {
	func presentList(response: MainList.FetchDrives.Response)
}

class MainListPresenter: MainListPresentationLogic {
	weak var viewController: MainListDisplayLogic?
	let dateFormatter = DateFormatter()
	let calendar = Calendar.current

	// MARK: MainListPresentationLogic

	func presentList(response: MainList.FetchDrives.Response) {

		dateFormatter.dateFormat = "dd.MM"


		var finalArray = [[MainList.FetchDrives.ViewModel.DisplayedCellItem]]()

		var subArray = [MainList.FetchDrives.ViewModel.DisplayedCellItem]()

		var subDayArray = [MainList.FetchDrives.ViewModel.DisplayedCellItem]()

		for section in response.fetchedDrives {
			subArray.removeAll()
			subDayArray.removeAll()

			var numberOfDrives: Int = 0
			var thisDriveIndex: Int = -1
			var previousDateString = ""

			for item in section {

				numberOfDrives += 1
				thisDriveIndex += 1

				let monthString = (item.monthString ?? "").lowercased().localized()
				let dateString = dateFormatter.string(from: Date.init(timeIntervalSince1970: item.startTime))

				var startAddress = (item.startAddress?.count == 0 ? "-" : item.startAddress) ?? "-"
				var endAddress = (item.endAddress?.count == 0 ? "-" : item.endAddress) ?? "-"

				let startCountry = (item.startCountry?.count == 0 ? "-" : item.startCountry) ?? "-"
				let endCountry = (item.endCountry?.count == 0 ? "-" : item.endCountry) ?? "-"

				if(startCountry != endCountry && startCountry != "-") {
					startAddress += ", \(startCountry)"
					endAddress += ", \(endCountry)"
				}


				if dateString != previousDateString {
					if subDayArray.count != 0 {
						for var cellItem in subDayArray {
							cellItem.numberOfDrives = numberOfDrives
							subArray.append(cellItem)
						}
						subDayArray.removeAll()
					}

					numberOfDrives = 0
					thisDriveIndex = 0
				}


				subDayArray.append(MainList.FetchDrives.ViewModel.DisplayedCellItem.init(thisDriveIndex:thisDriveIndex, monthName: monthString, dateString: dateString, distance: item.totalDistance, time: item.totalTime, identificator: item.identificator!, startAddress: startAddress, endAddress: endAddress, isBusinessType: item.isBusinessDrive))


				previousDateString = dateString
			}

			if(subDayArray.count != 0) {
				for var cellItem in subDayArray {
					cellItem.numberOfDrives = numberOfDrives + 1
					subArray.append(cellItem)
				}
			}

			if(subArray.count != 0) {
				finalArray.append(subArray)
			}
		}

    	let viewModel = MainList.FetchDrives.ViewModel(displayedCellItems: finalArray)
    	viewController?.presentList(viewModel: viewModel)
	}


}
