//
//  MainListRouter.swift
//  GPS Tracker
//
//  Created by Guntis on 2022.
//  Copyright (c) 2022 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainListRoutingLogic {
	func routeToSettings()
	func routeToFullMap()
	func routeToMapWithIdentificator(_ identificator: String)
	func routeToMapWithSectionedMonthString(_ sectionedMonthString: String)
}

protocol MainListDataPassing {
	var dataStore: MainListDataStore? { get set }
	var navigationController: UINavigationController? { get set }
}

class MainListRouter: NSObject, MainListRoutingLogic, MainListDataPassing {
	weak var viewController: MainListViewController?
	var dataStore: MainListDataStore?
	var navigationController: UINavigationController?
	
  	// MARK: MainListRoutingLogic

	@objc func routeToSettings() {
		viewController?.navigationController?.delegate = nil
  		navigateTo(source: viewController!, destination: SettingsViewController())
  	}

	@objc func routeToFullMap() {
		viewController?.navigationController?.delegate = nil
		let destination = MapViewController()
  		navigateTo(source: viewController!, destination: destination)
	}
	
  	@objc func routeToMapWithIdentificator(_ identificator: String) {
		viewController?.navigationController?.delegate = nil
		let destination = MapViewController()
		destination.router?.dataStore?.identificator = identificator
  		navigateTo(source: viewController!, destination: destination)
  	}

	@objc func routeToMapWithSectionedMonthString(_ sectionedMonthString: String) {
		viewController?.navigationController?.delegate = nil
		let destination = MapViewController()
		destination.router?.dataStore?.monthIdentificator = sectionedMonthString
  		navigateTo(source: viewController!, destination: destination)
	}

  	// MARK: Functions

	private func navigateTo(source: MainListViewController, destination: UIViewController) {

		let rootVc = ScenesManager.shared.window?.rootViewController as! UINavigationController
		rootVc.setNavigationBarHidden(false, animated: true)
		rootVc.viewControllers.last!.navigationItem.backBarButtonItem = UIBarButtonItem(title: "", style: .plain, target: nil, action: nil)
		rootVc.viewControllers.last!.navigationController?.navigationBar.topItem?.backBarButtonItem = UIBarButtonItem(title: "", style: .plain, target: nil, action: nil)
		rootVc.show(destination, sender: nil)
  	}
}
