//
//  SettingsInteractor.swift
//  GPS Tracker
//
//  Created by Guntis on 2022.
//  Copyright (c) 2022 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

protocol SettingsBusinessLogic {
  	func getSettingsCellsData(request: Settings.SettingsList.Request)
	func userPressedOnNotifEndDriveSwitch()
	func userPressedOnNotifWarningSwitch()
	func userPressedOnGpsSwitch()
	func userPressedOnMotionSwitch()
}

protocol SettingsDataStore {
  	//var name: String { get set }
}

class SettingsInteractor: NSObject, SettingsBusinessLogic, SettingsDataStore {
  	var presenter: SettingsPresentationLogic?
  	var settingsWorker = SettingsWorker()

	// MARK: SettingsBusinessLogic

  	func getSettingsCellsData(request: Settings.SettingsList.Request) {

		let response = Settings.SettingsList.Response(notifsEndDriveEnabled: AppSettingsWorker.shared.getNotifDriveEndIsEnabled(), notifsWarningEnabled: AppSettingsWorker.shared.getNotifWarningIsEnabled(), gpsEnabled: AppSettingsWorker.shared.getGPSIsEnabled(), motionEnabled: AppSettingsWorker.shared.getMotionIsEnabled())
		
		presenter?.presentSettingsListWithData(response: response)
  	}

	func userPressedOnNotifEndDriveSwitch() {

		AppSettingsWorker.shared.notifDriveEndSwitchWasPressed { [weak self] in
			let request = Settings.SettingsList.Request()
			self?.getSettingsCellsData(request: request)

			if AppSettingsWorker.shared.notificationsAuthorisationStatus == .denied {
				UIApplication.shared.open(URL(string: UIApplication.openSettingsURLString)!, options: [:], completionHandler: nil)
			}
		}
	}

	func userPressedOnNotifWarningSwitch() {
		AppSettingsWorker.shared.notifWarningSwitchWasPressed { [weak self] in
			let request = Settings.SettingsList.Request()
			self?.getSettingsCellsData(request: request)

			if AppSettingsWorker.shared.notificationsAuthorisationStatus == .denied {
				UIApplication.shared.open(URL(string: UIApplication.openSettingsURLString)!, options: [:], completionHandler: nil)
			}
		}
	}

	func userPressedOnGpsSwitch() {
  		AppSettingsWorker.shared.userPressedButtonToGetGPSAccess { result in
  			switch result {
  				case .firstTime:
					// All good, but reload data.
					let request = Settings.SettingsList.Request()
					self.getSettingsCellsData(request: request)
				case .secondTime:
					UIApplication.shared.open(URL(string: UIApplication.openSettingsURLString)!, options: [:], completionHandler: nil)
			}
		}
  	}

  	func userPressedOnMotionSwitch() {
  		AppSettingsWorker.shared.userPressedButtonToGetMotionAccess { result in
  			switch result {
  				case .firstTime:
					// All good, but reload data.
					let request = Settings.SettingsList.Request()
					self.getSettingsCellsData(request: request)
				case .secondTime:
					UIApplication.shared.open(URL(string: UIApplication.openSettingsURLString)!, options: [:], completionHandler: nil)
			}
		}
  	}

	// MARK: NSFetchedResultsControllerDelegate

  	func controllerDidChangeContent(_ controller: NSFetchedResultsController<NSFetchRequestResult>) {
  		getSettingsCellsData(request: Settings.SettingsList.Request())

	}

}
