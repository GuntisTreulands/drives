//
//  SettingsRouter.swift
//  GPS Tracker
//
//  Created by Guntis on 2022.
//  Copyright (c) 2022 . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import MessageUI
import CoreData
import CoreLocation

protocol SettingsRoutingLogic {
  	func routeToLanguageChooseScene()
  	func presentMailForm()
  	func exportToMailForm()
}

protocol SettingsDataPassing {
  	var dataStore: SettingsDataStore? { get }
}

class SettingsRouter: NSObject, SettingsRoutingLogic, SettingsDataPassing, MFMailComposeViewControllerDelegate {
  	weak var viewController: SettingsViewController?
  	var dataStore: SettingsDataStore?

	// MARK: SettingsRoutingLogic

  	func routeToLanguageChooseScene() {
  		navigateToScene(source: viewController!, destination: AppLanguageViewController())
  	}

	func presentMailForm() {
		if MFMailComposeViewController.canSendMail() {
			let mail = MFMailComposeViewController()

			mail.mailComposeDelegate = self
			mail.setToRecipients(["gtreulands@gmail.com"])
			mail.setSubject("settings_feedback_email_title".localized())
			mail.setMessageBody("""
				\("settings_feedback_email_info".localized()).
				<br><br><br><br><br><br><br><br><br>\(UIDevice.deviceDescription)
				""", isHTML: true)


			viewController!.present(mail, animated: true) { }
		} else {
			let subject = "settings_feedback_email_title".localized()
			let body = "\n\n\n\n\n\n\(UIDevice.deviceDescription)" //\("settings_feedback_email_info".localized()).

			let googleUrlString = "googlegmail:///co?to=gtreulands@gmail.com&subject=\(subject)&body=\(body)"

			let urlString = googleUrlString.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed) ?? googleUrlString

			if let googleUrl = URL(string: urlString) {
				// show alert to choose app
				if UIApplication.shared.canOpenURL(googleUrl) {
					UIApplication.shared.open(googleUrl)
				} else {
					let alert = UIAlertController(title: "settings_error_email_title".localized(), message: "settings_error_email_description".localized(), preferredStyle: .alert)
					alert.addAction(UIAlertAction(title: "ok_button_title".localized(), style: .cancel, handler: nil))
					viewController!.present(alert, animated: true)
				}
			} else {
				let alert = UIAlertController(title: "settings_error_email_title".localized(), message: "settings_error_email_description".localized(), preferredStyle: .alert)
				alert.addAction(UIAlertAction(title: "ok_button_title".localized(), style: .cancel, handler: nil))
				viewController!.present(alert, animated: true)
			}
		}
	}

	func exportToMailForm() {
		let body = DataBaseWorker.getExportData()

		if MFMailComposeViewController.canSendMail() {
			let mail = MFMailComposeViewController()

			mail.mailComposeDelegate = self
			mail.setSubject("settings_email_export_title".localized())
			mail.setMessageBody(body, isHTML: true)


			viewController!.present(mail, animated: true) { }
		} else {
			let subject = "settings_email_export_title".localized()

			let googleUrlString = "googlegmail:///co?subject=\(subject)&body=\(body)"

			let urlString = googleUrlString.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed) ?? googleUrlString

			if let googleUrl = URL(string: urlString) {
				// show alert to choose app
				if UIApplication.shared.canOpenURL(googleUrl) {
					UIApplication.shared.open(googleUrl)
				} else {
					let alert = UIAlertController(title: "settings_error_email_title".localized(), message: "settings_error_email_description".localized(), preferredStyle: .alert)
					alert.addAction(UIAlertAction(title: "ok_button_title".localized(), style: .cancel, handler: nil))
					viewController!.present(alert, animated: true)
				}
			} else {
				let alert = UIAlertController(title: "settings_error_email_title".localized(), message: "settings_error_email_description".localized(), preferredStyle: .alert)
				alert.addAction(UIAlertAction(title: "ok_button_title".localized(), style: .cancel, handler: nil))
				viewController!.present(alert, animated: true)
			}
		}
	}

	// MARK: MFMailComposeViewControllerDelegate

	func mailComposeController(_ controller: MFMailComposeViewController, didFinishWith result: MFMailComposeResult, error: Error?) {
		controller.dismiss(animated: true)
	}

	// MARK: Functions

	private func navigateToScene(source: UIViewController, destination: UIViewController) {
		source.navigationItem.backBarButtonItem = UIBarButtonItem(title: "", style: .plain, target: nil, action: nil)
		source.show(destination, sender: nil)
  	}
}
